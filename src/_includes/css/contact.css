.contact-us {
  --flow-space: var(--space-xl-2xl);
  padding-top: var(--space-m);
  /* padding-block-start: var(--space-m); */
}

.contact-methods {
  --stack-gap: var(--space-l);
  --grid-gap: var(--space-xl);
  grid-template-columns: repeat(2, 1fr);
  background-color: var(--surface-1);
  border-radius: var(--radius-1);
}

.contact-methods > * {
  --flow-space: var(--space-l);
}

.contact-methods > li:last-child {
  grid-column: 1/-1;
}

@media (max-width: 46em) {
  .contact-methods {
    grid-template-columns: 1fr;
  }
  
  .contact-methods li:first-child {
    border: unset;
    padding-top: unset;
    /* padding-block-start: unset; */
  }
}

.contact-methods li {
  --flow-space: var(--space-2xs);
  padding-top: var(--space-xl);
  /* padding-block-start: var(--space-xl); */
  border-top: var(--border-size-1) solid var(--accent-bg);
  /* border-block-start: var(--border-size-1) solid var(--accent-color); */
}

.contact-methods li > :last-child {
  margin-top: auto;
  /* margin-block-start: auto; */
}

.contact-methods svg {
  width: 32px;
  /* inline-size: 24px; */
  height: 32px;
  /* block-size: 24px; */
  fill: var(--accent-color);
}

svg[class*="bi-telephone"] {
  stroke: var(--accent-color);
  stroke-width: 0.3px;
}

/* .contact-methods p {
  color: var(--tertiary);
}

.contact-methods label {
  color: var(--secondary);
} */

details[open] .form-summary {
  color: var(--accent-color);
  background-color: var(--surface-1);
  padding-left: 0;
  border: unset;
}

.contact-form {
  --measure: 50ch;
  --stack-gap: var(--space-l);
  max-width: var(--measure);
  margin-top: var(--space-l);
  /* margin-block-start: var(--space-l); */
}

.contact-form * {
  border-width: var(--border-size-1);
  border-color: var(--accent-separator);
}

.contact-form div > * + * {
  margin-top: var(--space-xs);
}

.form-label {
  display: flex;
  align-items: baseline;
  justify-content: space-between;
}

/* validity styles for input  */
@supports
 (selector(:has(works))) {

  p:has( + input:focus:invalid) .validity:after { 
    content: "Invalid";
    color: hsl(0deg 73% 29%);
  }
  
  p:has( + input:valid) .validity:after { 
    content: "Valid";
    color: var(--accent-color);
  }
}